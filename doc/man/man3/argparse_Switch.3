.TH "argparse::Switch" 3 "Tue Jun 7 2022" "fsop - FileSystem OPerations" \" -*- nroff -*-
.ad l
.nh
.SH NAME
argparse::Switch \- Represents a switch/flag argument, which has no arity and is used to store a boolean or a constant upon presence or absence\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <switch\&.hpp>\fP
.PP
Inherits \fBargparse::Argument\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename NameType  = std::nullptr_t, typename AliasType  = std::nullptr_t, typename DestinationType  = std::nullptr_t, typename DefaultValueType  = std::nullptr_t, typename DescriptionType  = std::nullptr_t, typename NegatedType  = std::nullptr_t, typename ChoicesType  = std::nullptr_t, typename TransformType  = std::nullptr_t> \fBSwitch\fP (NameType \fBname\fP=nullptr, AliasType \fBalias\fP=nullptr, DestinationType \fBdest\fP=nullptr, DefaultValueType defaults=nullptr, DescriptionType \fBhelp\fP=nullptr, NegatedType \fBnegated\fP=nullptr, ChoicesType choices=nullptr, TransformType \fBtransform\fP=nullptr)"
.br
.RI "Construct a new \fBSwitch\fP object\&. "
.ti -1c
.RI "\fBArgument\fP & \fBrequired\fP (bool \fB_required\fP) noexcept=delete"
.br
.ti -1c
.RI "\fBArgument\fP & \fBarity\fP (int \fB_arity\fP) noexcept=delete"
.br
.ti -1c
.RI "\fBArgument\fP & \fBchoices\fP (const std::optional< std::vector< std::string_view > > &\fB_choices\fP) noexcept=delete"
.br
.ti -1c
.RI "std::string \fBusage\fP () const noexcept override"
.br
.RI "Describes the usage of the argument through a returned string\&. "
.ti -1c
.RI "std::string \fBdescriptor\fP (unsigned tty_columns=60) const noexcept override"
.br
.RI "Describes the argument along with the provided explanation\&. "
.ti -1c
.RI "std::unique_ptr< \fBArgument\fP > \fBclone\fP () const override"
.br
.RI "Creates a copy of the argument as a unique_ptr for polymorphic usage\&. "
.ti -1c
.RI "range::iterator \fBparse_args\fP (range::iterator begin, range::iterator end, \fBtypes::result_map\fP &values) const override"
.br
.RI "Parses arguments according to the argument specification from a range of argument values referred by their beginning and end iterators\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "bool \fB_negated\fP = false"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Represents a switch/flag argument, which has no arity and is used to store a boolean or a constant upon presence or absence\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename NameType  = std::nullptr_t, typename AliasType  = std::nullptr_t, typename DestinationType  = std::nullptr_t, typename DefaultValueType  = std::nullptr_t, typename DescriptionType  = std::nullptr_t, typename NegatedType  = std::nullptr_t, typename ChoicesType  = std::nullptr_t, typename TransformType  = std::nullptr_t> argparse::Switch::Switch (NameType name = \fCnullptr\fP, AliasType alias = \fCnullptr\fP, DestinationType dest = \fCnullptr\fP, DefaultValueType defaults = \fCnullptr\fP, DescriptionType help = \fCnullptr\fP, NegatedType negated = \fCnullptr\fP, ChoicesType choices = \fCnullptr\fP, TransformType transform = \fCnullptr\fP)\fC [inline]\fP"

.PP
Construct a new \fBSwitch\fP object\&. 
.PP
\fBTemplate Parameters\fP
.RS 4
\fINameType\fP Placeholder type for named arguments\&. 
.br
\fIAliasType\fP Placeholder type for named arguments\&. 
.br
\fIDestinationType\fP Placeholder type for named arguments\&. 
.br
\fIDefaultValueType\fP Placeholder type for named arguments\&. 
.br
\fIDescriptionType\fP Placeholder type for named arguments\&. 
.br
\fINegatedType\fP Placeholder type for named arguments\&. 
.br
\fIChoicesType\fP Placeholder type for named arguments\&. 
.br
\fITransformType\fP Placeholder type for named arguments\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIname\fP The name of the argument to display\&. 
.br
\fIalias\fP Alias for the argument (default='')\&. 
.br
\fIdest\fP Destination name for the argument in the parsed table (default=name)\&. 
.br
\fIdefaults\fP Default value for the argument\&. 
.br
\fIhelp\fP Brief description about the argument (default='')\&. 
.br
\fInegated\fP Treat flag presence as falsy\&. 
.br
\fIchoices\fP Possible choices for the argument's values\&. 
.br
\fItransform\fP Transformation to apply over argument values\&. 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "std::unique_ptr< \fBArgument\fP > argparse::Switch::clone () const\fC [inline]\fP, \fC [override]\fP, \fC [virtual]\fP"

.PP
Creates a copy of the argument as a unique_ptr for polymorphic usage\&. 
.PP
Implements \fBargparse::Argument\fP\&.
.SS "std::string argparse::Switch::descriptor (unsigned tty_columns = \fC60\fP) const\fC [override]\fP, \fC [virtual]\fP, \fC [noexcept]\fP"

.PP
Describes the argument along with the provided explanation\&. 
.PP
Implements \fBargparse::Argument\fP\&.
.SS "argparse::Argument::range::iterator argparse::Switch::parse_args (range::iterator begin, range::iterator end, \fBtypes::result_map\fP & values) const\fC [override]\fP, \fC [virtual]\fP"

.PP
Parses arguments according to the argument specification from a range of argument values referred by their beginning and end iterators\&. 
.PP
\fBParameters\fP
.RS 4
\fIbegin\fP iterator pointing to the beginning of the argument value range\&. 
.br
\fIend\fP iterator pointing to the end of the argument value range\&. 
.br
\fIvalues\fP map (hash table) to store parsed valued for the argument\&.
.RE
.PP
\fBReturns\fP
.RS 4
{range::iterator} iterator pointing to the next argument value unused by the current argument\&. 
.RE
.PP

.PP
Implements \fBargparse::Argument\fP\&.
.SS "std::string argparse::Switch::usage () const\fC [override]\fP, \fC [virtual]\fP, \fC [noexcept]\fP"

.PP
Describes the usage of the argument through a returned string\&. 
.PP
Implements \fBargparse::Argument\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "bool argparse::Switch::_negated = false\fC [protected]\fP"
Treat flag presence as falsy\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for fsop - FileSystem OPerations from the source code\&.
